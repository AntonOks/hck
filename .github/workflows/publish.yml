name: Publish

on:
  push:
    tags:
      - "*"

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: hck
            asset_name: hck-linux-amd64
          - os: macos-latest
            artifact_name: hck
            asset_name: hck-macos-amd64
          # - os: windows-latest
          #   artifact_name: hck
          #   asset_name: windows-macos-amd64

    steps:
      - uses: actions/checkout@v2

      - name: Install LLVM Tools
        run: rustup component add llvm-tools-preview

      - name: Build
        run: |
          bash pgo.sh

      - name: Build archive
        shell: bash
        run: |
          staging="${{matrix.asset_name}}-${{ github.ref }}-src-pgo"
          mkdir -p "$staging"

          cp {README.md,UNLICENSE,LICENSE-MIT} "$staging/"
          cp -R ./src "./$staging/src"
          cp -R ./pgo-data "./$staging/pgo-data"

          if [ "${{ matrix.os }}" = "windows-latest"]; then
            7z a "${staging}.zip" "$staging"
            echo "ASSET=${staging}.zip" >> $GITHUB_ENV
          else
            tar czf "${staging}.tar.gz" "${staging}"
            echo "ASSET=${staging}.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload src and pgo data to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          tag: ${{ github.ref }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}-${{ github.ref }}
          tag: ${{ github.ref }}
